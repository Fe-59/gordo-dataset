name: CI

on:
  pull_request:
    types: [opened, reopened]
  push:
    branches:
      - '**'

jobs:
  test:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v2

      - name: Set up Python 3.7
        uses: actions/setup-python@v1
        with:
          python-version: 3.7
          architecture: 'x64'

      - name: Upgrade pip
        run: |
          pip install --upgrade pip

      - name: Install Poetry
        uses: snok/install-poetry@v1.1.1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true

      - name: Load cached venv
        id: cached-poetry-dependencies
        uses: actions/cache@v2
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ hashFiles('**/poetry.lock') }}

      - name: Set up poetry config
        run: |
          poetry config virtualenvs.in-project false
          poetry config virtualenvs.path ~/.virtualenvs

      - name: Install Dependencies
        run: poetry install

      - name: Check safety
        run: poetry run safety check --full-report

      - name: Running tests
        run: poetry run pytest

#      - name: Black
#        uses: psf/black@20.8b0

      - name: Save Coverage
        run: |
          mkdir -p /tmp/coverage-reports
          mv ./coverage.xml /tmp/coverage-reports/coverage.xml
          mv ./junit/junit.xml /tmp/coverage-reports/junit.xml

      - uses: actions/upload-artifact@v1
        with:
          name: Coverage Reports
          path: /tmp/coverage-reports

  upload-coverage-reports:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - uses: actions/checkout@v1

      - uses: actions/download-artifact@v1
        with:
          name: Coverage Reports
          path: /tmp/coverage-reports

      - name: Copy Coverage Reports
        run: cp /tmp/coverage-reports/*.xml .

      - uses: codecov/codecov-action@v1
        with:
          token: a8ef5bf0-4a4c-47ea-ad45-263fa7495935
          fail_ci_if_error: false
